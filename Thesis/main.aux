\relax 
\newlabel{chap:engAbstract}{{}{i}}
\newlabel{chap:frAbstract}{{}{ii}}
\newlabel{chap:acknowledgments}{{}{iii}}
\@writefile{toc}{\contentsline {chapter}{\numberline {1}Introduction}{1}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {1.1}Introduction}{1}}
\@writefile{lof}{\contentsline {figure}{\numberline {1.1}{\ignorespaces Example program with its possible outcomes under sequential consistency.}}{1}}
\newlabel{intro:Example}{{1.1}{1}}
\citation{ECMA}
\@writefile{lof}{\contentsline {figure}{\numberline {1.2}{\ignorespaces Left program is when the two reads in T1 are reordered, whereas the right program is when the two writes of T2 are reordered.}}{2}}
\newlabel{intro:Example2}{{1.2}{2}}
\@writefile{toc}{\contentsline {chapter}{\numberline {2}Background}{3}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {chapter}{\numberline {3}Related Work}{4}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {chapter}{\numberline {4}The Memory Model}{5}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {paragraph}{The Model is Quite Algorithmic}{5}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.1}{\ignorespaces The definition for Coherent Reads}}{6}}
\@writefile{toc}{\contentsline {paragraph}{Certain Unnecessary Definitions}{7}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.2}{\ignorespaces The definition for Compose Write Event Bytes}}{7}}
\@writefile{toc}{\contentsline {paragraph}{Still a bit verbose}{8}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.3}{\ignorespaces The Axiom of Sequentially Consistent Atomics}}{8}}
\@writefile{toc}{\contentsline {section}{\numberline {4.1}Agents, Events and their Types}{9}}
\@writefile{toc}{\contentsline {paragraph}{Agents}{9}}
\@writefile{toc}{\contentsline {paragraph}{Agent Cluster}{9}}
\@writefile{toc}{\contentsline {paragraph}{Agent Event List $(ael)$}{9}}
\@writefile{toc}{\contentsline {section}{\numberline {4.2}Events}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.1}Event Types}{9}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.4}{\ignorespaces The hierarchical categories of different sets of events.}}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.2}Range ($\Re $)}{10}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.3}Event Order / Event Access Mode}{11}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.5}{\ignorespaces Access Modes}}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.2.4}Tear Free ($tf$) or Tearing $!tf$)}{12}}
\@writefile{toc}{\contentsline {section}{\numberline {4.3}Relation among events}{12}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.1}Read-Write event relations}{13}}
\@writefile{toc}{\contentsline {paragraph}{Read-Bytes-From $(\mathrel {\mathop {_{rbf}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }})$}{13}}
\@writefile{toc}{\contentsline {paragraph}{Reads-From $(\mathrel {\mathop {_{rf}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }})$}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.6}{\ignorespaces An example to show the reads-from relations that are drawn for the example program between read and write events.}}{13}}
\newlabel{read-from}{{4.6}{13}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.3.2}Agent-Synchronizes With (\textbf  {\textit  {ASW}})}{13}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.7}{\ignorespaces An example to show the reads-from relations that are drawn for the example program between read and write events.}}{14}}
\newlabel{agent-sync-with}{{4.7}{14}}
\@writefile{toc}{\contentsline {section}{\numberline {4.4}Ordering Relations among Events}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.1}Agent Order ($\mathrel {\mathop {_{ao}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{14}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.8}{\ignorespaces An example with agent order among the events.}}{14}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.2}Synchronize-With Order ($\mathrel {\mathop {_{sw}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }} $)}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.9}{\ignorespaces An example with synchronize with relations among the events.}}{15}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.3}Happens Before Order ($\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{15}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.10}{\ignorespaces An example with all the types of happens-before relations between events.}}{16}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.4.4}Memory Order ($\mathrel {\mathop {_{mo}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{16}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.11}{\ignorespaces An example with a memory order (total) among all events.}}{16}}
\@writefile{toc}{\contentsline {section}{\numberline {4.5}Helper Definitions}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.12}{\ignorespaces An example of a Candidate}}{17}}
\newlabel{fig:candidate}{{4.12}{17}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.13}{\ignorespaces An example of an Execution based on Candidate above}}{18}}
\newlabel{fig:my_label}{{4.13}{18}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.14}{\ignorespaces Observable Behavior}}{18}}
\newlabel{fig:my_label}{{4.14}{18}}
\@writefile{toc}{\contentsline {section}{\numberline {4.6}Valid Execution Rules (the Axioms)}{19}}
\newlabel{CoRe}{{1}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.15}{\ignorespaces A read value cannot come from a write that has happened after it}}{19}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.16}{\ignorespaces A read value cannot come from a write if there is a write that happens between them, writing to the same memory:}}{20}}
\newlabel{TfRe}{{2}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.17}{\ignorespaces Pattern of Tear-free reads}}{20}}
\newlabel{SeqCsAt}{{3}{20}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.18}{\ignorespaces A read value cannot come from a write, if there exists a write memory ordered between them and all 3 events are sequentially consistent with equal ranges.}}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.19}{\ignorespaces A read value cannot come from a write, if there exists a write memory ordered between them and both writes are sequentially consistent with equal ranges.}}{21}}
\@writefile{lof}{\contentsline {figure}{\numberline {4.20}{\ignorespaces A read value cannot come from a write, if there exists a write memory ordered between them and both this write and the read are sequentially consistent with equal ranges.}}{22}}
\@writefile{toc}{\contentsline {section}{\numberline {4.7}Race}{22}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.7.1}Race Condition $RC$}{22}}
\@writefile{toc}{\contentsline {subsection}{\numberline {4.7.2}Data Race $DR$}{22}}
\@writefile{toc}{\contentsline {paragraph}{Data-Race-Free (DRF) Programs}{23}}
\@writefile{toc}{\contentsline {section}{\numberline {4.8}Consistent Executions (Valid Observables)}{23}}
\@writefile{toc}{\contentsline {chapter}{\numberline {5}Instruction Reordering}{25}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {5.1}Introduction}{25}}
\@writefile{toc}{\contentsline {paragraph}{Simple reordering is not straightforward under shared memory semantics}{26}}
\@writefile{toc}{\contentsline {paragraph}{Some Examples}{26}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.1}{\ignorespaces Ex1(a)}}{26}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.2}{\ignorespaces Ex1(b)}}{26}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.3}{\ignorespaces Ex2(a)}}{27}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.4}{\ignorespaces Ex2(b)}}{27}}
\@writefile{toc}{\contentsline {section}{\numberline {5.2}Summary of Our Approach}{28}}
\@writefile{toc}{\contentsline {paragraph}{Assumption}{28}}
\@writefile{toc}{\contentsline {section}{\numberline {5.3}Preliminaries}{29}}
\newlabel{Cons}{{5.3.1}{29}}
\newlabel{Dir}{{5.3.2}{29}}
\newlabel{Reord}{{5.3.3}{30}}
\@writefile{toc}{\contentsline {section}{\numberline {5.4}Useful Lemmas}{30}}
\newlabel{Lemma1}{{1}{30}}
\newlabel{l10}{{{0}}{30}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.5}{\ignorespaces For the first case}}{31}}
\newlabel{fig:my_label}{{5.5}{31}}
\newlabel{l14}{{{4}}{31}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.6}{\ignorespaces For the second case}}{32}}
\newlabel{fig:my_label}{{5.6}{32}}
\newlabel{Lemma2}{{2}{32}}
\newlabel{l20}{{{0}}{32}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.7}{\ignorespaces Caption}}{33}}
\newlabel{fig:my_label}{{5.7}{33}}
\newlabel{l24}{{{4}}{33}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.8}{\ignorespaces Caption}}{34}}
\newlabel{fig:my_label}{{5.8}{34}}
\@writefile{toc}{\contentsline {section}{\numberline {5.5}Valid reordering}{34}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.1}Reordering of Consecutive Events}{34}}
\newlabel{ThmReord}{{5.1}{34}}
\@writefile{toc}{\contentsline {paragraph}{1. Preserving \textit  {happens-before} relations}{35}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.9}{\ignorespaces For any Candidate Execution of $C$, the set $K_e$ and $K_d$}}{36}}
\newlabel{fig:my_label}{{5.9}{36}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.10}{\ignorespaces The direct relation changes that can be observed while reordering events $e$ and $d$}}{36}}
\newlabel{fig:my_label}{{5.10}{36}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.11}{\ignorespaces For any Candidate execution, the intuition behind valid pivots $<p1,p2>$}}{37}}
\newlabel{fig:my_label}{{5.11}{37}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.12}{\ignorespaces Table summarizing whether we have valid pair of pivots based on $e$ and $d$}}{38}}
\newlabel{fig:my_label}{{5.12}{38}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.13}{\ignorespaces A Candidate Execution where p1 is not a valid pivot}}{38}}
\newlabel{fig:my_label}{{5.13}{38}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.14}{\ignorespaces The resultant Candidate Execution after reordering, exposing the relations with $p_x$, $K_{e2}$ and $d$ that arelost}}{39}}
\newlabel{fig:my_label}{{5.14}{39}}
\@writefile{toc}{\contentsline {paragraph}{2. Additional \textit  {happens-before} relations}{39}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.15}{\ignorespaces A Candidate Execution where $d$ is a sequentially consistent read}}{40}}
\newlabel{fig:my_label}{{5.15}{40}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.16}{\ignorespaces The Candidate Execution after reordering, exposing the new relations established with $e$, $p3$ and set $k$}}{40}}
\newlabel{fig:my_label}{{5.16}{40}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.17}{\ignorespaces Table summarizing when new \textit  {happens-before} relations could be introduced based on having valid pair of pivots }}{41}}
\newlabel{fig:my_label}{{5.17}{41}}
\@writefile{toc}{\contentsline {paragraph}{3. Presence of cycles?}{41}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.18}{\ignorespaces Caption}}{41}}
\newlabel{fig:my_label}{{5.18}{41}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.19}{\ignorespaces If k belongs to one of the sets $K_e$ or $K_d$}}{42}}
\newlabel{fig:my_label}{{5.19}{42}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.20}{\ignorespaces If $k\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}e$ or $d\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}k$ are new sets of relations}}{43}}
\newlabel{fig:my_label}{{5.20}{43}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.21}{\ignorespaces A cycle exists in the case where we have two new sets of relations ($k\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}e$ and $d\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}k$) }}{43}}
\newlabel{fig:my_label}{{5.21}{43}}
\@writefile{lot}{\contentsline {table}{\numberline {5.1}{\ignorespaces Insert good caption here.}}{44}}
\newlabel{fig:my_label}{{5.1}{44}}
\@writefile{toc}{\contentsline {paragraph}{4. Do new relations introduce new observable behaviors?}{45}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.22}{\ignorespaces The role of the axioms on introducing a new relation between an unordered Read and some event $k$}}{46}}
\newlabel{fig:my_label}{{5.22}{46}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.23}{\ignorespaces (i) and (ii(b)) satisfy the axiom of Coherent Reads}}{47}}
\newlabel{fig:my_label}{{5.23}{47}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.24}{\ignorespaces (ii) satisfies the axiom of Coherent Reads}}{48}}
\newlabel{fig:my_label}{{5.24}{48}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.25}{\ignorespaces (i(a)), (ii(a)) satisfy the axiom of Coherent Reads, whereas (i(b)), (ii(b)) satisfy the axiom of SequentiallyConsistent Atomics}}{48}}
\newlabel{fig:my_label}{{5.25}{48}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.26}{\ignorespaces The final table summarizing the valid cases where observable behaviors will only be a subset after reordering.}}{49}}
\newlabel{fig:my_label}{{5.26}{49}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.2}Reordering Non-Consecutive Events}{50}}
\newlabel{CorollReord}{{5.1.1}{50}}
\newlabel{corol1}{{5.1.1}{50}}
\@writefile{toc}{\contentsline {paragraph}{Base Case: $n = 1.$}{51}}
\@writefile{toc}{\contentsline {paragraph}{2. Inductive Case $n > 1$}{51}}
\newlabel{CorollCodeMotion1}{{5.1.2}{52}}
\newlabel{CorollCodeMotion2}{{5.1.3}{52}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.5.3}Counter Examples for all the Invalid Cases}{53}}
\@writefile{toc}{\contentsline {paragraph}{Reads to same memory where $e$ is of type $sc$ while $d$ is of either $uo/sc$}{53}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.27}{\ignorespaces Case where a = 0 , b = 1 is invalid due to Coherent Reads}}{53}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.28}{\ignorespaces Case where the reads are reordered and a = 0 , b = 1 is valid}}{54}}
\@writefile{toc}{\contentsline {paragraph}{Reads to non-equal range of memory where $e$ is of type $sc$ while $d$ is of either $uo/sc$}{54}}
\@writefile{toc}{\contentsline {paragraph}{A Read $e$ of type $sc$ followed by a Write of either $uo/sc$}{54}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.29}{\ignorespaces Case where a = 1 and b = 1 is invalid due to Coherent Reads.}}{55}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.30}{\ignorespaces Case where events of T1 are reordered, resulting in a = 1 and b = 1 to be valid.}}{55}}
\@writefile{toc}{\contentsline {paragraph}{A Read $e$ of type $uo$ followed by a write $d$ of type $sc$}{56}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.31}{\ignorespaces Case where a = 1 and b = 1 is invalid due to Coherent Reads.}}{56}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.32}{\ignorespaces Case where events of T2 are reordered, resulting in a = 1 and b = 1 to be valid.}}{56}}
\@writefile{toc}{\contentsline {paragraph}{A Write $e$ followed by a Read $d$ both of type $sc$}{56}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.33}{\ignorespaces Case where a = 1 and b = 1 is valid and no happens-before cycles}}{57}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.34}{\ignorespaces Case where a = 1 and b = 1 is creates a happens-before cycle}}{57}}
\@writefile{toc}{\contentsline {paragraph}{A Write $e$ of type $uo/sc$ followed by a Write $d$ of type $sc$}{58}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.35}{\ignorespaces Case where a = 0 and b = 1 is invalid due to Coherent Reads.}}{58}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.36}{\ignorespaces Case where events of T1 are reordered, resulting in a = 0 and b = 1 to be valid.}}{58}}
\@writefile{toc}{\contentsline {section}{\numberline {5.6}From Candidates to Program}{59}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.6.1}Addressing programs with Conditionals}{59}}
\newlabel{CondB1}{{1}{59}}
\newlabel{CondB2}{{2}{60}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.37}{\ignorespaces Two forms of conditonals}}{60}}
\newlabel{ReordCond}{{5.1.4}{61}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.38}{\ignorespaces The above two cases where our assumption does not hold.}}{61}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.39}{\ignorespaces Two cases where $e$ and $d$ can both be part of some conditional.}}{62}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.40}{\ignorespaces Two cases where only $d$ is a part of some conditional branch.}}{65}}
\@writefile{toc}{\contentsline {paragraph}{Case when $e$ is not in any conditional branch but $d$ is.}{66}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.41}{\ignorespaces }}{66}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.42}{\ignorespaces }}{67}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.43}{\ignorespaces }}{68}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.44}{\ignorespaces }}{69}}
\@writefile{toc}{\contentsline {paragraph}{Case when $e$ is part of a conditonal branch $B_e$ and $d$ is part of another conditonal branch $B_d$ nested within $B_e$.}{69}}
\@writefile{toc}{\contentsline {paragraph}{Case when $e$ and $d$ are part of different conditional branches. One not nested in the other.}{69}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.45}{\ignorespaces }}{70}}
\@writefile{lof}{\contentsline {figure}{\numberline {5.46}{\ignorespaces }}{71}}
\@writefile{toc}{\contentsline {subsection}{\numberline {5.6.2}Addressing Programs with Loops}{72}}
\newlabel{LoopReordEq}{{3}{72}}
\@writefile{toc}{\contentsline {paragraph}{Loop invariant code motion}{73}}
\@writefile{toc}{\contentsline {chapter}{\numberline {6}Elimination}{74}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {6.1}Elimination}{74}}
\newlabel{ReadElim}{{6.1}{74}}
\@writefile{toc}{\contentsline {paragraph}{1. Preserving \emph  {happens-before} relations}{74}}
\@writefile{toc}{\contentsline {paragraph}{2. The \emph  {happens-before} relations lost}{75}}
\@writefile{toc}{\contentsline {paragraph}{3. Presence of Cycles?}{75}}
\@writefile{toc}{\contentsline {paragraph}{4. Do the lost relations result in New Observable Behaviors?}{75}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.1}{\ignorespaces The first type of relations removed and the various patterns forbidden by them.}}{76}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.2}{\ignorespaces The second type of relations removed and the various patterns forbidden by them.}}{76}}
\newlabel{WriteElim}{{6.2}{77}}
\@writefile{toc}{\contentsline {paragraph}{Preserving Happens-before relations}{77}}
\@writefile{toc}{\contentsline {paragraph}{2. The \emph  {happens-before} relations lost}{78}}
\@writefile{toc}{\contentsline {paragraph}{3. Presence of Cycles?}{78}}
\@writefile{toc}{\contentsline {paragraph}{4. Do the lost relations result in New Observable Behaviors?}{78}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.3}{\ignorespaces First case possibilities (change caption stimiar to that for read elim)}}{79}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.4}{\ignorespaces Second case possibilities (change caption stimiar to that for read elim)}}{80}}
\newlabel{CorolWriteElim}{{6.2.1}{80}}
\@writefile{toc}{\contentsline {paragraph}{Base Case : n = 1}{81}}
\@writefile{toc}{\contentsline {paragraph}{Inductive Case (n)}{81}}
\@writefile{toc}{\contentsline {section}{\numberline {6.2}From Candidates to Program}{82}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.1}Addressing Programs with Conditionals}{82}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.5}{\ignorespaces Type 1:}}{83}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.6}{\ignorespaces Type 2:}}{84}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.7}{\ignorespaces Type 3:}}{85}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.8}{\ignorespaces Type 4:}}{86}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.9}{\ignorespaces  }}{87}}
\@writefile{lof}{\contentsline {figure}{\numberline {6.10}{\ignorespaces 4:}}{88}}
\@writefile{toc}{\contentsline {subsection}{\numberline {6.2.2}Addressing Programs with Loops}{89}}
\@writefile{toc}{\contentsline {paragraph}{Loop Invariant Code motion}{90}}
\newlabel{LoopInvCodeMotRead1}{{6.2.3}{90}}
\newlabel{LoopInvCodeMotRead2}{{6.2.4}{92}}
\newlabel{LoopInvCodeMotWrite1}{{6.2.5}{93}}
\newlabel{LoopInvCodeMotWrite2}{{6.2.6}{95}}
\@writefile{toc}{\contentsline {paragraph}{Reordering two events accross loops}{96}}
\@writefile{toc}{\contentsline {chapter}{\numberline {7}Conclusion, Summary, Future Work}{97}}
\@writefile{lof}{\addvspace {10\p@ }}
\@writefile{lot}{\addvspace {10\p@ }}
\@writefile{toc}{\contentsline {section}{\numberline {7.1}Limitations/Advantages}{97}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1.1}Separation of Concerns}{97}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1.2}Validity of Transformations is Sound but not Complete}{98}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1.3}Lack of Practical Results}{99}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.1.4}Mapping from Programming Constructs to Abstract events}{99}}
\@writefile{toc}{\contentsline {section}{\numberline {7.2}Steps Further}{100}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.1}Addressing Read-Modify-Write}{100}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.2}Incorporating Tearing Factor}{100}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.3}Role of synchronize/host-specific events}{100}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.2.4}Addressing other basic program transformations}{101}}
\@writefile{toc}{\contentsline {section}{\numberline {7.3}Critique of the Model itself}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3.1}Range of Initialize events uncertain}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3.2}Unordered events do not respect Coherence}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3.3}Out of Thin air values}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.3.4}Sequentially Consistent events can be in a data race}{102}}
\@writefile{toc}{\contentsline {section}{\numberline {7.4}Takeaway from this work}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4.1}Addressing Concurrency Problems}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4.2}Separation of Concerns}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4.3}Weak Memory Models still ill understood}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.4.4}Addressing validity of Program Transformations in Concurrent Context}{102}}
\@writefile{toc}{\contentsline {section}{\numberline {7.5}Future Directions in Weak Memory Consistency}{102}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.5.1}Specification of Mixed-Size memory models}{102}}
\citation{DBLP:conf/popl/FlurSPNMGSBS17}
\citation{DBLP:conf/fm/LahavV16}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.5.2}Transformational Specification of Memory Models}{103}}
\@writefile{toc}{\contentsline {subsection}{\numberline {7.5.3}Automation of Specification of Weak Memory Models}{103}}
