\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\addvspace {10\p@ }
\contentsline {figure}{\numberline {4.1}{\ignorespaces The hierarchical categories of different sets of events.}}{5}
\contentsline {figure}{\numberline {4.2}{\ignorespaces An example to show the reads-from relations that are drawn for the example program between read and write events.}}{8}
\contentsline {figure}{\numberline {4.3}{\ignorespaces An example to show the reads-from relations that are drawn for the example program between read and write events.}}{9}
\contentsline {figure}{\numberline {4.4}{\ignorespaces An example with agent order among the events.}}{9}
\contentsline {figure}{\numberline {4.5}{\ignorespaces An example with synchronize with relations among the events.}}{10}
\contentsline {figure}{\numberline {4.6}{\ignorespaces An example with all the types of happens-before relations between events.}}{11}
\contentsline {figure}{\numberline {4.7}{\ignorespaces An example with a memory order (total) among all events.}}{11}
\contentsline {figure}{\numberline {4.8}{\ignorespaces An example of a Candidate}}{12}
\contentsline {figure}{\numberline {4.9}{\ignorespaces An example of an Execution based on Candidate above}}{13}
\contentsline {figure}{\numberline {4.10}{\ignorespaces Observable Behavior}}{13}
\contentsline {figure}{\numberline {4.11}{\ignorespaces A read value cannot come from a write that has happened after it}}{14}
\contentsline {figure}{\numberline {4.12}{\ignorespaces A read value cannot come from a write if there is a write that happens between them, writing to the same memory:}}{14}
\contentsline {figure}{\numberline {4.13}{\ignorespaces Pattern of Tear-free reads}}{15}
\contentsline {figure}{\numberline {4.14}{\ignorespaces A read value cannot come from a write, if there exists a write memory ordered between them and all 3 events are sequentially consistent with equal ranges.}}{16}
\contentsline {figure}{\numberline {4.15}{\ignorespaces A read value cannot come from a write, if there exists a write memory ordered between them and both writes are sequentially consistent with equal ranges.}}{16}
\contentsline {figure}{\numberline {4.16}{\ignorespaces A read value cannot come from a write, if there exists a write memory ordered between them and both this write and the read are sequentially consistent with equal ranges.}}{17}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {5.1}{\ignorespaces For the first case}}{22}
\contentsline {figure}{\numberline {5.2}{\ignorespaces For the second case}}{23}
\contentsline {figure}{\numberline {5.3}{\ignorespaces Caption}}{24}
\contentsline {figure}{\numberline {5.4}{\ignorespaces Caption}}{25}
\contentsline {figure}{\numberline {5.5}{\ignorespaces For any Candidate Execution of $C$, the set $K_e$ and $K_d$}}{28}
\contentsline {figure}{\numberline {5.6}{\ignorespaces The direct relation changes that can be observed while reordering events $e$ and $d$}}{28}
\contentsline {figure}{\numberline {5.7}{\ignorespaces For any Candidate execution, the intuition behind valid pivots $<p1,p2>$}}{29}
\contentsline {figure}{\numberline {5.8}{\ignorespaces Table summarizing whether we have valid pair of pivots based on $e$ and $d$}}{30}
\contentsline {figure}{\numberline {5.9}{\ignorespaces A Candidate Execution where p1 is not a valid pivot}}{30}
\contentsline {figure}{\numberline {5.10}{\ignorespaces The resultant Candidate Execution after reordering, exposing the relations with $p_x$, $K_{e2}$ and $d$ that arelost}}{31}
\contentsline {figure}{\numberline {5.11}{\ignorespaces A Candidate Execution where $d$ is a sequentially consistent read}}{32}
\contentsline {figure}{\numberline {5.12}{\ignorespaces The Candidate Execution after reordering, exposing the new relations established with $e$, $p3$ and set $k$}}{32}
\contentsline {figure}{\numberline {5.13}{\ignorespaces Table summarizing when new \textit {happens-before} relations could be introduced based on having valid pair of pivots }}{33}
\contentsline {figure}{\numberline {5.14}{\ignorespaces Caption}}{33}
\contentsline {figure}{\numberline {5.15}{\ignorespaces If k belongs to one of the sets $K_e$ or $K_d$}}{34}
\contentsline {figure}{\numberline {5.16}{\ignorespaces If $k\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}e$ or $d\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}k$ are new sets of relations}}{34}
\contentsline {figure}{\numberline {5.17}{\ignorespaces A cycle exists in the case where we have two new sets of relations ($k\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}e$ and $d\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}k$) }}{35}
\contentsline {figure}{\numberline {5.18}{\ignorespaces The role of the axioms on introducing a new relation between an unordered Read and some event $k$}}{37}
\contentsline {figure}{\numberline {5.19}{\ignorespaces (i) and (ii(b)) satisfy the axiom of Coherent Reads}}{38}
\contentsline {figure}{\numberline {5.20}{\ignorespaces (ii) satisfies the axiom of Coherent Reads}}{38}
\contentsline {figure}{\numberline {5.21}{\ignorespaces (i(a)), (ii(a)) satisfy the axiom of Coherent Reads, whereas (i(b)), (ii(b)) satisfy the axiom of SequentiallyConsistent Atomics}}{39}
\contentsline {figure}{\numberline {5.22}{\ignorespaces The final table summarizing the valid cases where observable behaviors will only be a subset after reordering.}}{39}
\contentsline {figure}{\numberline {5.23}{\ignorespaces Case where a = 0 , b = 1 is invalid due to Coherent Reads}}{43}
\contentsline {figure}{\numberline {5.24}{\ignorespaces Case where the reads are reordered and a = 0 , b = 1 is valid}}{44}
\contentsline {figure}{\numberline {5.25}{\ignorespaces Case where a = 1 and b = 1 is invalid due to Coherent Reads.}}{45}
\contentsline {figure}{\numberline {5.26}{\ignorespaces Case where events of T1 are reordered, resulting in a = 1 and b = 1 to be valid.}}{45}
\contentsline {figure}{\numberline {5.27}{\ignorespaces Case where a = 1 and b = 1 is invalid due to Coherent Reads.}}{46}
\contentsline {figure}{\numberline {5.28}{\ignorespaces Case where events of T2 are reordered, resulting in a = 1 and b = 1 to be valid.}}{46}
\contentsline {figure}{\numberline {5.29}{\ignorespaces Case where a = 1 and b = 1 is valid and no happens-before cycles}}{47}
\contentsline {figure}{\numberline {5.30}{\ignorespaces Case where a = 1 and b = 1 is creates a happens-before cycle}}{47}
\contentsline {figure}{\numberline {5.31}{\ignorespaces Case where a = 0 and b = 1 is invalid due to Coherent Reads.}}{48}
\contentsline {figure}{\numberline {5.32}{\ignorespaces Case where events of T1 are reordered, resulting in a = 0 and b = 1 to be valid.}}{48}
\addvspace {10\p@ }
\contentsline {figure}{\numberline {6.1}{\ignorespaces The first type of relations removed and the various patterns forbidden by them.}}{56}
\contentsline {figure}{\numberline {6.2}{\ignorespaces The second type of relations removed and the various patterns forbidden by them.}}{56}
\contentsline {figure}{\numberline {6.3}{\ignorespaces First case possibilities (change caption stimiar to that for read elim)}}{59}
\contentsline {figure}{\numberline {6.4}{\ignorespaces Second case possibilities (change caption stimiar to that for read elim)}}{60}
\addvspace {10\p@ }
\addvspace {10\p@ }
