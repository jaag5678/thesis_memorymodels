\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax 
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {1}Introduction}{1}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {2}Background}{3}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.1}Memory Consistency Models}{3}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.2}Program Transformations under Weak Memory}{5}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.3}Axiomatic Style Specifications of Weak Memory}{8}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.4}Other Concerns}{9}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {3}Related Work}{11}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {4}The Memory Model}{12}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{The Model is Quite Algorithmic}{12}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Certain Unnecessary Definitions}{14}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Still a bit verbose}{15}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.1}Agents, Events and their Types}{16}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Agents}{16}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Agent Cluster}{16}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Agent Event List $(ael)$}{16}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.2}Events}{16}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.1}Event Types}{16}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.2}Range ($\Re $)}{17}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.3}Event Order / Event Access Mode}{18}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.4}Tear Free ($tf$) or Tearing $!tf$)}{19}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.3}Relation among events}{19}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.3.1}Read-Write event relations}{20}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Read-Bytes-From $(\mathrel {\mathop {_{rbf}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }})$}{20}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Reads-From $(\mathrel {\mathop {_{rf}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }})$}{20}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.3.2}Agent-Synchronizes With (\textbf {\textit {ASW}})}{20}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.4}Ordering Relations among Events}{21}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.1}Agent Order ($\mathrel {\mathop {_{ao}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{21}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.2}Synchronize-With Order ($\mathrel {\mathop {_{sw}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }} $)}{22}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.3}Happens Before Order ($\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{22}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.4}Memory Order ($\mathrel {\mathop {_{mo}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{23}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.5}Helper Definitions}{24}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.6}Valid Execution Rules (the Axioms)}{26}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.7}Race}{29}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.7.1}Race Condition $RC$}{29}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.7.2}Data Race $DR$}{29}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Data-Race-Free (DRF) Programs}{30}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.8}Consistent Executions (Valid Observables)}{30}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {5}Instruction Reordering}{32}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.1}Introduction}{32}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Simple reordering is not straightforward under shared memory semantics}{33}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Some Examples}{33}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.2}Summary of Our Approach}{35}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Assumption}{35}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.3}Some Useful Definitions}{36}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.4}Useful Lemmas}{37}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.5}Valid reordering at the Candidate Level}{40}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.5.1}Reordering of Consecutive Events}{40}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{1. Preserving \textit {happens-before} relations}{41}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{2. Additional \textit {happens-before} relations}{45}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{3. Presence of cycles?}{46}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{4. Do new relations introduce new observable behaviors?}{49}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.5.2}Reordering Non-Consecutive Events}{54}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Base Case: $n = 1.$}{55}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{2. Inductive Case $n > 1$}{56}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.5.3}Counter Examples for all the Invalid Cases}{57}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Reads to same memory where $e$ is of type $sc$ while $d$ is of either $uo/sc$}{57}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{A Read $e$ of type $sc$ followed by a Write of either $uo/sc$}{59}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{A Read $e$ of type $uo$ followed by a write $d$ of type $sc$}{61}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{A Write $e$ followed by a Read $d$ both of type $sc$}{61}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{A Write $e$ of type $uo/sc$ followed by a Write $d$ of type $sc$}{63}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.6}From Candidates to Program}{64}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.6.1}Addressing programs with Conditionals}{64}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.6.2}Counter Examples for Programs with Conditionals}{68}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.6.3}Addressing Programs with Loops}{73}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Reordering Accross Loops}{74}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {6}Elimination}{75}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{1. Preserving \emph {happens-before} relations}{75}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{2. The \emph {happens-before} relations lost}{76}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{3. Presence of Cycles?}{76}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{4. Do the lost relations result in New Observable Behaviors?}{76}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Preserving Happens-before relations}{78}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{2. The \emph {happens-before} relations lost}{79}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{3. Presence of Cycles?}{79}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{4. Do the lost relations result in New Observable Behaviors?}{79}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Base Case : n = 1}{81}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Inductive Case (n)}{82}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {6.1}From Candidates to Program}{82}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {6.1.1}Addressing Programs with Conditionals}{83}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {6.1.2}Addressing Programs with Loops}{90}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Loop Invariant Code motion}{91}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Reordering two events accross loops}{97}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {7}Conclusion, Summary, Future Work}{98}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.1}Limitations/Advantages}{98}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.1}Separation of Concerns}{98}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.2}Validity of Transformations is Sound but not Complete}{99}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.3}Lack of Practical Results}{99}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.4}Mapping from Programming Constructs to Abstract events}{100}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.2}Steps Further}{100}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.1}Addressing Read-Modify-Write}{100}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.2}Incorporating Tearing Factor}{100}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.3}Role of synchronize/host-specific events}{100}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.4}Addressing other basic program transformations}{101}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.3}Critique of the Model itself}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.3.1}Range of Initialize events uncertain}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.3.2}Unordered events do not respect Coherence}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.3.3}Out of Thin air values}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.3.4}Sequentially Consistent events can be in a data race}{102}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.4}Takeaway from this work}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.4.1}Addressing Concurrency Problems}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.4.2}Separation of Concerns}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.4.3}Weak Memory Models still ill understood}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.4.4}Addressing validity of Program Transformations in Concurrent Context}{102}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.5}Future Directions in Weak Memory Consistency}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.5.1}Specification of Mixed-Size memory models}{102}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.5.2}Transformational Specification of Memory Models}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.5.3}Automation of Specification of Weak Memory Models}{103}
