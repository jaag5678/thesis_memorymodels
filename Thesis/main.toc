\boolfalse {citerequest}\boolfalse {citetracker}\boolfalse {pagetracker}\boolfalse {backtracker}\relax 
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {1}Introduction}{1}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {2}Background}{3}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.1}Memory Consistency Models}{3}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{x86}{5}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Java}{5}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{C++/C11}{5}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Mixed-size models}{6}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.2}Program Transformations under Weak Memory}{6}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.3}Axiomatic Style Specifications of Weak Memory}{9}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {2.4}Other Concerns}{10}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Compilation}{10}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Verificaiton / Model Checking}{10}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Out of Thin Air }{11}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Custom Memory Models}{11}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {3}Related Work}{12}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {4}The Memory Model}{13}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{The Model is Quite Algorithmic}{13}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Certain Unnecessary Definitions}{15}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Still a bit verbose}{16}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.1}Agents, Events and their Types}{17}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Agents}{17}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Agent Cluster}{17}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Agent Event List $(ael)$}{17}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.2}Events}{17}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.1}Event Types}{17}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.2}Range ($\Re $)}{18}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.3}Event Order / Event Access Mode}{19}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.2.4}Tear Free ($tf$) or Tearing $!tf$)}{20}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.3}Relation among events}{20}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.3.1}Read-Write event relations}{21}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Read-Bytes-From $(\mathrel {\mathop {_{rbf}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }})$}{21}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Reads-From $(\mathrel {\mathop {_{rf}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }})$}{21}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.3.2}Agent-Synchronizes With (\textbf {\textit {ASW}})}{21}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.4}Ordering Relations among Events}{22}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.1}Agent Order ($\mathrel {\mathop {_{ao}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{22}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.2}Synchronize-With Order ($\mathrel {\mathop {_{sw}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }} $)}{23}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.3}Happens Before Order ($\mathrel {\mathop {_{hb}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{23}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.4.4}Memory Order ($\mathrel {\mathop {_{mo}}\limits ^{\DOTSB \relbar \joinrel \rightarrow }}$)}{24}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.5}Helper Definitions}{25}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.6}Valid Execution Rules (the Axioms)}{27}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.7}Race}{30}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.7.1}Race Condition $RC$}{30}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {4.7.2}Data Race $DR$}{30}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Data-Race-Free (DRF) Programs}{31}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {4.8}Consistent Executions (Valid Observables)}{31}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {5}Instruction Reordering}{33}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.1}Introduction}{33}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Simple reordering is not straightforward under shared memory semantics}{34}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Some Examples}{34}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.2}Summary of Our Approach}{36}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Assumption}{36}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.3}Some Useful Definitions}{37}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.4}Useful Lemmas}{38}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.5}Valid reordering at the Candidate Level}{41}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.5.1}Reordering of Consecutive Events}{41}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{1. Preserving \textit {happens-before} relations}{42}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{2. Additional \textit {happens-before} relations}{46}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{3. Presence of cycles?}{47}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{4. Do new relations introduce new observable behaviors?}{50}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.5.2}Reordering Non-Consecutive Events}{55}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Base Case: $n = 1.$}{56}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{2. Inductive Case $n > 1$}{57}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.5.3}Counter Examples for all the Invalid Cases}{58}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Reads to same memory where $e$ is of type $sc$ while $d$ is of either $uo/sc$}{58}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{A Read $e$ of type $sc$ followed by a Write of either $uo/sc$}{60}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{A Read $e$ of type $uo$ followed by a write $d$ of type $sc$}{62}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{A Write $e$ followed by a Read $d$ both of type $sc$}{62}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{A Write $e$ of type $uo/sc$ followed by a Write $d$ of type $sc$}{64}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {5.6}From Candidates to Program}{65}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.6.1}Addressing programs with Conditionals}{65}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.6.2}Counter Examples for Programs with Conditionals}{69}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {5.6.3}Addressing Programs with Loops}{74}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Reordering Accross Loops}{75}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {6}Elimination}{76}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{1. Preserving \emph {happens-before} relations}{76}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{2. The \emph {happens-before} relations lost}{77}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{3. Presence of Cycles?}{77}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{4. Do the lost relations result in New Observable Behaviors?}{77}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Preserving Happens-before relations}{79}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{2. The \emph {happens-before} relations lost}{80}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{3. Presence of Cycles?}{80}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{4. Do the lost relations result in New Observable Behaviors?}{80}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Base Case : n = 1}{82}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Inductive Case (n)}{83}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {6.1}From Candidates to Program}{83}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {6.1.1}Addressing Programs with Conditionals}{84}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {6.1.2}Addressing Programs with Loops}{91}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Loop Invariant Code motion}{92}
\defcounter {refsection}{0}\relax 
\contentsline {paragraph}{Reordering two events accross loops}{98}
\defcounter {refsection}{0}\relax 
\contentsline {chapter}{\numberline {7}Conclusion, Summary, Future Work}{99}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.1}Limitations/Advantages}{99}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.1}Separation of Concerns}{99}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.2}Validity of Transformations is Sound but not Complete}{100}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.3}Lack of Practical Results}{100}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.1.4}Mapping from Programming Constructs to Abstract events}{101}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.2}Steps Further}{101}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.1}Addressing Read-Modify-Write}{101}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.2}Incorporating Tearing Factor}{101}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.3}Role of synchronize/host-specific events}{101}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.2.4}Addressing other basic program transformations}{102}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.3}Critique of the Model itself}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.3.1}Range of Initialize events uncertain}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.3.2}Unordered events do not respect Coherence}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.3.3}Out of Thin air values}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.3.4}Sequentially Consistent events can be in a data race}{103}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.4}Takeaway from this work}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.4.1}Addressing Concurrency Problems}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.4.2}Separation of Concerns}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.4.3}Weak Memory Models still ill understood}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.4.4}Addressing validity of Program Transformations in Concurrent Context}{103}
\defcounter {refsection}{0}\relax 
\contentsline {section}{\numberline {7.5}Future Directions in Weak Memory Consistency}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.5.1}Specification of Mixed-Size memory models}{103}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.5.2}Transformational Specification of Memory Models}{104}
\defcounter {refsection}{0}\relax 
\contentsline {subsection}{\numberline {7.5.3}Automation of Specification of Weak Memory Models}{104}
